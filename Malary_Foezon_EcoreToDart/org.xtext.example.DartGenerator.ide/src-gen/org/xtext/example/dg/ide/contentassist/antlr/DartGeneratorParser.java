/*
 * generated by Xtext 2.28.0
 */
package org.xtext.example.dg.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.example.dg.ide.contentassist.antlr.internal.InternalDartGeneratorParser;
import org.xtext.example.dg.services.DartGeneratorGrammarAccess;

public class DartGeneratorParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(DartGeneratorGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, DartGeneratorGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getTypeChampAccess().getAlternatives(), "rule__TypeChamp__Alternatives");
			builder.put(grammarAccess.getBDDAccess().getGroup(), "rule__BDD__Group__0");
			builder.put(grammarAccess.getBDDAccess().getGroup_3(), "rule__BDD__Group_3__0");
			builder.put(grammarAccess.getBDDAccess().getGroup_4(), "rule__BDD__Group_4__0");
			builder.put(grammarAccess.getBDDAccess().getGroup_4_3(), "rule__BDD__Group_4_3__0");
			builder.put(grammarAccess.getCollectionAccess().getGroup(), "rule__Collection__Group__0");
			builder.put(grammarAccess.getCollectionAccess().getGroup_3(), "rule__Collection__Group_3__0");
			builder.put(grammarAccess.getCollectionAccess().getGroup_4(), "rule__Collection__Group_4__0");
			builder.put(grammarAccess.getCollectionAccess().getGroup_4_3(), "rule__Collection__Group_4_3__0");
			builder.put(grammarAccess.getDocumentsAccess().getGroup(), "rule__Documents__Group__0");
			builder.put(grammarAccess.getDocumentsAccess().getGroup_3(), "rule__Documents__Group_3__0");
			builder.put(grammarAccess.getDocumentsAccess().getGroup_4(), "rule__Documents__Group_4__0");
			builder.put(grammarAccess.getDocumentsAccess().getGroup_4_3(), "rule__Documents__Group_4_3__0");
			builder.put(grammarAccess.getDocumentsAccess().getGroup_5(), "rule__Documents__Group_5__0");
			builder.put(grammarAccess.getDocumentsAccess().getGroup_5_3(), "rule__Documents__Group_5_3__0");
			builder.put(grammarAccess.getChampAccess().getGroup(), "rule__Champ__Group__0");
			builder.put(grammarAccess.getChampAccess().getGroup_3(), "rule__Champ__Group_3__0");
			builder.put(grammarAccess.getBDDAccess().getTypeAssignment_3_1(), "rule__BDD__TypeAssignment_3_1");
			builder.put(grammarAccess.getBDDAccess().getCollectionsAssignment_4_2(), "rule__BDD__CollectionsAssignment_4_2");
			builder.put(grammarAccess.getBDDAccess().getCollectionsAssignment_4_3_1(), "rule__BDD__CollectionsAssignment_4_3_1");
			builder.put(grammarAccess.getCollectionAccess().getTitreAssignment_3_1(), "rule__Collection__TitreAssignment_3_1");
			builder.put(grammarAccess.getCollectionAccess().getDocumentsAssignment_4_2(), "rule__Collection__DocumentsAssignment_4_2");
			builder.put(grammarAccess.getCollectionAccess().getDocumentsAssignment_4_3_1(), "rule__Collection__DocumentsAssignment_4_3_1");
			builder.put(grammarAccess.getDocumentsAccess().getIdAssignment_3_1(), "rule__Documents__IdAssignment_3_1");
			builder.put(grammarAccess.getDocumentsAccess().getChampsAssignment_4_2(), "rule__Documents__ChampsAssignment_4_2");
			builder.put(grammarAccess.getDocumentsAccess().getChampsAssignment_4_3_1(), "rule__Documents__ChampsAssignment_4_3_1");
			builder.put(grammarAccess.getDocumentsAccess().getCollectionsAssignment_5_2(), "rule__Documents__CollectionsAssignment_5_2");
			builder.put(grammarAccess.getDocumentsAccess().getCollectionsAssignment_5_3_1(), "rule__Documents__CollectionsAssignment_5_3_1");
			builder.put(grammarAccess.getChampAccess().getChampAssignment_3_1(), "rule__Champ__ChampAssignment_3_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private DartGeneratorGrammarAccess grammarAccess;

	@Override
	protected InternalDartGeneratorParser createParser() {
		InternalDartGeneratorParser result = new InternalDartGeneratorParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public DartGeneratorGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(DartGeneratorGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
