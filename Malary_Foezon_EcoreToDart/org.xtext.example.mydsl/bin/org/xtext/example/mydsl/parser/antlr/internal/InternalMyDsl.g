/*
 * generated by Xtext 2.28.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "BDD";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleBDD
entryRuleBDD returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBDDRule()); }
	iv_ruleBDD=ruleBDD
	{ $current=$iv_ruleBDD.current; }
	EOF;

// Rule BDD
ruleBDD returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBDDAccess().getBDDAction_0(),
					$current);
			}
		)
		otherlv_1='BDD'
		{
			newLeafNode(otherlv_1, grammarAccess.getBDDAccess().getBDDKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getBDDAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='type'
			{
				newLeafNode(otherlv_3, grammarAccess.getBDDAccess().getTypeKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBDDAccess().getTypeTypeBDDEnumRuleCall_3_1_0());
					}
					lv_type_4_0=ruleTypeBDD
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBDDRule());
						}
						set(
							$current,
							"type",
							lv_type_4_0,
							"org.xtext.example.mydsl.MyDsl.TypeBDD");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='collections'
			{
				newLeafNode(otherlv_5, grammarAccess.getBDDAccess().getCollectionsKeyword_4_0());
			}
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getBDDAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBDDAccess().getCollectionsCollectionParserRuleCall_4_2_0());
					}
					lv_collections_7_0=ruleCollection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBDDRule());
						}
						add(
							$current,
							"collections",
							lv_collections_7_0,
							"org.xtext.example.mydsl.MyDsl.Collection");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getBDDAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getBDDAccess().getCollectionsCollectionParserRuleCall_4_3_1_0());
						}
						lv_collections_9_0=ruleCollection
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBDDRule());
							}
							add(
								$current,
								"collections",
								lv_collections_9_0,
								"org.xtext.example.mydsl.MyDsl.Collection");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getBDDAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getBDDAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleCollection
entryRuleCollection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCollectionRule()); }
	iv_ruleCollection=ruleCollection
	{ $current=$iv_ruleCollection.current; }
	EOF;

// Rule Collection
ruleCollection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCollectionAccess().getCollectionAction_0(),
					$current);
			}
		)
		otherlv_1='Collection'
		{
			newLeafNode(otherlv_1, grammarAccess.getCollectionAccess().getCollectionKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getCollectionAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='titre'
			{
				newLeafNode(otherlv_3, grammarAccess.getCollectionAccess().getTitreKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCollectionAccess().getTitreEStringParserRuleCall_3_1_0());
					}
					lv_titre_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCollectionRule());
						}
						set(
							$current,
							"titre",
							lv_titre_4_0,
							"org.xtext.example.mydsl.MyDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='documents'
			{
				newLeafNode(otherlv_5, grammarAccess.getCollectionAccess().getDocumentsKeyword_4_0());
			}
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getCollectionAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCollectionAccess().getDocumentsDocumentsParserRuleCall_4_2_0());
					}
					lv_documents_7_0=ruleDocuments
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCollectionRule());
						}
						add(
							$current,
							"documents",
							lv_documents_7_0,
							"org.xtext.example.mydsl.MyDsl.Documents");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getCollectionAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCollectionAccess().getDocumentsDocumentsParserRuleCall_4_3_1_0());
						}
						lv_documents_9_0=ruleDocuments
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCollectionRule());
							}
							add(
								$current,
								"documents",
								lv_documents_9_0,
								"org.xtext.example.mydsl.MyDsl.Documents");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getCollectionAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getCollectionAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleDocuments
entryRuleDocuments returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDocumentsRule()); }
	iv_ruleDocuments=ruleDocuments
	{ $current=$iv_ruleDocuments.current; }
	EOF;

// Rule Documents
ruleDocuments returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDocumentsAccess().getDocumentsAction_0(),
					$current);
			}
		)
		otherlv_1='Documents'
		{
			newLeafNode(otherlv_1, grammarAccess.getDocumentsAccess().getDocumentsKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getDocumentsAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='id'
			{
				newLeafNode(otherlv_3, grammarAccess.getDocumentsAccess().getIdKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDocumentsAccess().getIdEStringParserRuleCall_3_1_0());
					}
					lv_id_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDocumentsRule());
						}
						set(
							$current,
							"id",
							lv_id_4_0,
							"org.xtext.example.mydsl.MyDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='champs'
			{
				newLeafNode(otherlv_5, grammarAccess.getDocumentsAccess().getChampsKeyword_4_0());
			}
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getDocumentsAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDocumentsAccess().getChampsChampParserRuleCall_4_2_0());
					}
					lv_champs_7_0=ruleChamp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDocumentsRule());
						}
						add(
							$current,
							"champs",
							lv_champs_7_0,
							"org.xtext.example.mydsl.MyDsl.Champ");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getDocumentsAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDocumentsAccess().getChampsChampParserRuleCall_4_3_1_0());
						}
						lv_champs_9_0=ruleChamp
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDocumentsRule());
							}
							add(
								$current,
								"champs",
								lv_champs_9_0,
								"org.xtext.example.mydsl.MyDsl.Champ");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getDocumentsAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		(
			otherlv_11='collections'
			{
				newLeafNode(otherlv_11, grammarAccess.getDocumentsAccess().getCollectionsKeyword_5_0());
			}
			otherlv_12='{'
			{
				newLeafNode(otherlv_12, grammarAccess.getDocumentsAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDocumentsAccess().getCollectionsCollectionParserRuleCall_5_2_0());
					}
					lv_collections_13_0=ruleCollection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDocumentsRule());
						}
						add(
							$current,
							"collections",
							lv_collections_13_0,
							"org.xtext.example.mydsl.MyDsl.Collection");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_14=','
				{
					newLeafNode(otherlv_14, grammarAccess.getDocumentsAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDocumentsAccess().getCollectionsCollectionParserRuleCall_5_3_1_0());
						}
						lv_collections_15_0=ruleCollection
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDocumentsRule());
							}
							add(
								$current,
								"collections",
								lv_collections_15_0,
								"org.xtext.example.mydsl.MyDsl.Collection");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_16='}'
			{
				newLeafNode(otherlv_16, grammarAccess.getDocumentsAccess().getRightCurlyBracketKeyword_5_4());
			}
		)?
		otherlv_17='}'
		{
			newLeafNode(otherlv_17, grammarAccess.getDocumentsAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleChamp
entryRuleChamp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChampRule()); }
	iv_ruleChamp=ruleChamp
	{ $current=$iv_ruleChamp.current; }
	EOF;

// Rule Champ
ruleChamp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getChampAccess().getChampAction_0(),
					$current);
			}
		)
		otherlv_1='Champ'
		{
			newLeafNode(otherlv_1, grammarAccess.getChampAccess().getChampKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getChampAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='champ'
			{
				newLeafNode(otherlv_3, grammarAccess.getChampAccess().getChampKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getChampAccess().getChampTypeChampEnumRuleCall_3_1_0());
					}
					lv_champ_4_0=ruleTypeChamp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getChampRule());
						}
						set(
							$current,
							"champ",
							lv_champ_4_0,
							"org.xtext.example.mydsl.MyDsl.TypeChamp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getChampAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Rule TypeBDD
ruleTypeBDD returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='FIREBASE'
		{
			$current = grammarAccess.getTypeBDDAccess().getFIREBASEEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getTypeBDDAccess().getFIREBASEEnumLiteralDeclaration());
		}
	)
;

// Rule TypeChamp
ruleTypeChamp returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='STRING'
			{
				$current = grammarAccess.getTypeChampAccess().getSTRINGEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTypeChampAccess().getSTRINGEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='BOOLEAN'
			{
				$current = grammarAccess.getTypeChampAccess().getBOOLEANEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTypeChampAccess().getBOOLEANEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='MAP'
			{
				$current = grammarAccess.getTypeChampAccess().getMAPEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getTypeChampAccess().getMAPEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='ARRAY'
			{
				$current = grammarAccess.getTypeChampAccess().getARRAYEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getTypeChampAccess().getARRAYEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='NULL'
			{
				$current = grammarAccess.getTypeChampAccess().getNULLEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getTypeChampAccess().getNULLEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='TIMESTAMP'
			{
				$current = grammarAccess.getTypeChampAccess().getTIMESTAMPEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getTypeChampAccess().getTIMESTAMPEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='GEOPOINT'
			{
				$current = grammarAccess.getTypeChampAccess().getGEOPOINTEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getTypeChampAccess().getGEOPOINTEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='REFERENCE'
			{
				$current = grammarAccess.getTypeChampAccess().getREFERENCEEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getTypeChampAccess().getREFERENCEEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='NUMBER'
			{
				$current = grammarAccess.getTypeChampAccess().getNUMBEREnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getTypeChampAccess().getNUMBEREnumLiteralDeclaration_8());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
